from flask import Flask, request, redirect
from flask import g, render_template, make_response
#import db as MySQL
import functions
import sec
from aww import awwqw
from blog.main import app2Blg2
from contact.main import app23z

from flask import session
from db import improved_mysql_query


#generated by import secrets 


#kekq = MySQL.fetch()


#print(awwqw())

#print(kekq[0])
#print(kekq[0][0])
#print(kekq[0][1])
#print(kekq[0][2])


#q1 = MySQL.fetchOne("select * from user where id = %s", (7,))

#print(q1)


#functions.escape("ahaha \\ ")
#print(functions.escape("ahaha \\ "))



app = Flask(__name__)
app.register_blueprint(sec.app)
app.register_blueprint(app2Blg2)
app.register_blueprint(app23z)


app.secret_key = 'ab5833df82c1942eb364d0d6d26b9ab9c6e3edab90ac16797c6fb6bd3c8b5853'




@app.errorhandler(404)
def page_not_found(error):
    return 'This page does not exist', 404


@app.before_request
def check_authentication():
	g.xzzz = "klekz"
	#session['user'] = 'Phantom'
	#username = request.cookies.get('username')
	#print(request.endpoint)
	
	if 'uid_nm' in session:
		dd_si1 = (session['uid_nm'], session['pswd'])
		
		
		#mycursor_z1 = MySQL.mydb.cursor()
		#mycursor_z1.execute("select * from `user` where `username` = %s and `password` = %s", dd_si1)
		
		#g.usrdaTa = mycursor_z1.fetchone()
		ddddq_1 = functions.FforCheckuSerCredentials(session['uid_nm'], session['pswd'], "return")
		g.usrdaTa = ddddq_1
		#DDDqz = functions.FforCheckuSerCredentials(session['uid_nm'], session['pswd'], "return")

		#mycursor_z1.close()
		
		ddddq_1 = 1555
		#var_q  = improved_mysql_query("select * from user where id = 12",fetchall=False)
		
		#print("qweqwe")
		#print(f" usrdaTa = {g.usrdaTa}  ")
		
		
		
		#print("qzz")
	else:
		print("")
		#print(session['user'])
	
	
#insert into `user` (`name`,`surname`,`added_time`, `gender`, `username`, `email`) values('qq_1','surname','12313','male','FoLLeN','gegs@gmail.com');


@app.before_request
def KZzzzqwqeq():
	"""print(g.xzzz)"""
	#print (f" usr= {session['uid_nm']}   pswd = {session['pswd']}")






@app.route('/qz_teq')
def inde_kz_1zx():
    resp = make_response(redirect('/'))
    resp.set_cookie('username', 'the username')
    
    return resp 
    #redirect('/')



@app.route("/", methods=['GET'])
def mmai2n():
	
	if 'user' in session:
		#cheqkusr = session["user"]	
		cheqkusr = {'user':session["user"], 'uid':'145'}
		g.user = cheqkusr
	else:
		cheqkusr = None
		g.user = None
		
	
	#print(cheqkusr)
	
	return render_template("home.html")
	
	
	
@app.route("/login", methods=['GET','POST'])
def login():
	
	if request.method == "POST":
		
		USr_id = request.form['user']
		USr_ps = request.form['pass']
		
		"""data = {
				'method':'post', 
				'arr': {
					'user':'test',
					'pass': '12345'
				}
				} 
		"""
		
		
		var_siqifex = functions.FforCheckuSerCredentials(USr_id,USr_ps, type_1="return")
		
		if var_siqifex != None:
				
			session['uid_nm'] = USr_id
			session['pswd'] = USr_ps
			
			return redirect("/")
			
		else:
			data = {
			'method':'post',
			'sts': 'error'
			}  
			return render_template("login.html", Data = data)
		
	else:
		data = {
			'method':'get'
		}  
	
	
	print(data)
		
	#if data.method == "get":	
	
	return render_template("login.html", Data = data)
	
	#else
		#return render_template("login.html")
		
		

@app.route("/register", methods=['GET'])
def registration_2():
	return render_template("register.html")



@app.route("/apartment/<int:uid>", methods=['GET'])
def apartment_id(uid):
	
	tabl = "blog"
	col = "uid"
	uid2 = (uid,)

	#data = MySQL.fetchOneFromSpecific(tabl, col, uid2)
	
	
	data = improved_mysql_query("select * from `apartments`  where `uid` = %s", uid2, fetchall=False)
	
	
	if data is None:
		return redirect("/")
	
	return f" {data}"
	#return render_template("register.html")		

@app.route("/about")
def About_m():
	return render_template("about/main.html")



@app.route("/faq")
def Faq_main():
	return "faq"

	
@app.route("/services")
def Services_main():
	return "services"


@app.route("/partners_2/")
def Partners_main():
	return "Partners"	


@app.route("/pass_recovery/")
def Pass_rec_main():
	return render_template("user/recovery/main.html")	



	

@app.route("/q21")
def Mainq():
	return f'test  {g.xzzz}'


@app.route("/xz")
def Main2():
	return render_template("main.html")



#allowing only integers
@app.route("/user/<int:id>")
def user_id(id):
    return f"{id}"


##url doesn't matter 
@app.route("/user_id/<id>")
def user_with_jstid(id):
    return f"{id}"


#print(__name__)

#if __name__ == '__main__':
    #app.run(debug=True)

